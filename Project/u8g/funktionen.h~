/*
###################################################
rncontrol.h

Diese Header-Datei stellt grundlegende Funktionen für das RN-Control 1.4 in C zur Verfügung.

Autor: Georg Richter
#######################################################
*/
extern u8g_t u8g;

void u8g_DrawInt(uint8_t x, uint8_t y, int16_t num)
{
  char buffer[10];
	itoa( num , buffer, 10);
  u8g_DrawStr(&u8g, x, y, buffer);
}

////////////////////////////////////////////////////////////////////////////////
//RGB LED:
void led_hsvToRgb (uint8_t h, uint8_t  s, uint8_t v) //Farbe, Sättigung, Helligkeit
{
	uint8_t red, green, blue;
	uint8_t i, f;
	uint8_t  p, q, t;

  if( s == 0 )
 	{
    red = (255 * v )/255;
    green = (255 * v )/255;
    blue = (255 * v )/255;
	}
	else
	{	
    i=h/43;
		f=h%43;
		p = (v * (255 - s))/255;
		q = (v * ((10710 - (s * f))/42))/255;
		t = (v * ((10710 - (s * (42 - f)))/42))/255;

		switch( i )
		{
      case 0:
				red = v; green = t; blue = p; break;
			case 1:
				red = q; green = v; blue = p; break;
			case 2:
				red = p; green = v; blue = t; break;
			case 3:
				red = p; green = q; blue = v; break;			
			case 4:
				red = t; green = p; blue = v; break;				
			case 5:
	 			red = v; green = p; blue = q; break;
		}
	}  
	OCR4B = blue; OCR4C = green; OCR4A = red;  
}

/////////////////////////////////////////////////////////////////////////////
//Rechnet rohen Wert vom Entfernungssensor in cm um
uint16_t ir_rawToCm(uint16_t raw)
{
	return 0.0000001167729 * raw * raw * raw * raw - 0.0001480187 * raw * raw * raw + 0.06985 * raw * raw - 15.10298 * raw + 1460;
}
